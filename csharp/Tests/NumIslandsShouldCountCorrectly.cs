using Challenges;
using Shouldly;
using Xunit;

namespace Tests;

public class NumIslandsShouldCountCorrectly
{
    public static TheoryData<char[][], int> GetIslandCountCases() => new()
    {
        {
            [
                ['1', '1', '1', '1', '0'],
                ['1', '1', '0', '1', '0'],
                ['1', '1', '0', '0', '0'],
                ['0', '0', '0', '0', '0']
            ], 1
        },
        {
            [
                ['1', '1', '0', '0', '0'],
                ['1', '1', '0', '0', '0'],
                ['0', '0', '1', '0', '0'],
                ['0', '0', '0', '1', '1']
            ], 3
        },
        {
            [
                ['0', '0', '0'],
                ['0', '0', '0']
            ], 0
        },
        {
            [
                ['1', '1'],
                ['1', '1']
            ], 1
        },
        {
            [], 0
        },
        {
            [
                ['0', '0', '0', '0', '0', '0', '0', '1', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '1', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '1', '0'],
                ['0', '1', '1', '1', '1', '1', '0', '1', '0'],
                ['0', '1', '0', '0', '0', '1', '0', '1', '0'],
                ['0', '1', '0', '1', '0', '1', '0', '1', '0'],
                ['0', '1', '0', '0', '0', '1', '0', '1', '0'],
                ['0', '1', '0', '1', '0', '1', '0', '1', '0'],
                ['0', '1', '0', '1', '1', '1', '0', '1', '0'],
                ['0', '1', '0', '0', '0', '0', '0', '1', '0'],
                ['0', '1', '1', '1', '1', '1', '1', '1', '0'],
            ], 2
        }
    };

    [Theory]
    [MemberData(nameof(GetIslandCountCases))]
    public void ReturnsCorrectIslandCount(char[][] grid, int expected)
    {
        var result = NumIslandsImplementations.NumIslands(grid);
        result.ShouldBe(expected);
    }
}